%byte functions%
:bc:?>b?>b<<[->+>+<<]>[-<+>]!: %Copies the current byte to a new square right of it%
:b=:c>$c>[-$-$]!$: %Equals check with pointer. Inserts a new square right with the result and moves the pointer to the right%
:ba:$c>[-$+$]!$: %Adds two bytes. saves in source%
:bs:$c>[-$-$]!$: %Substracts two bytes. saves in source%
:bm:$c>c[->$a$<]!>!$: %multiplies two bytes. saves in source%
:bg:c>$c>$[-$-($^b$)$]$[$+$^b]!$: %Greater than comparator. Inserts new square to the right with the result. (0=true)%
%Strings%
:S:^*b&:
:S+:*[>]?>b<$c>[-$+$]!$&: %Adds a character(as a byte) to the string%
:Sa:$*[$p+$>]$: %Concatenates another string to the source%
:Sp:*[.>]&: %prints the string%
:d:?>|d.!:

:L: *b& :
:A: *b?>b& :
:B: *A?>A& :
:T: *b?>b?>b?>b+&: % AMOUNT | A1 | A2 | DONE %
:Tx:
    $*$*>c>[$>$-]!  %Find first account%
    <$*~+>g(        %if account has more money than transaction amount%
      <s>           %subtract amount from his balance%
    )[$^b$^b]       %otherwise set amount to 0%
    !<-              %remove result square and free the lock%
    &&*            %pointer now points back to start of bank again%
    $>>c>[$>$-]!    %Find second account%
    <<$*~+>a<-&&$&*>>>^b&:

B**>|a&>*>|z&&@
?>T*++++>>+&
?>T*++++>+>&
?>T*+++>>+&
?>T*++++>+>&
?>T*++++>>+&
?>T*++++>+>&
?>T*++++>>+&
?>T*++++>+>&

/x\</x\</x\</x\</x\</x\</x\</x\
*>>>~&>
*>>>~&>
*>>>~&>
*>>>~&>
*>>>~&>
*>>>~&>
*>>>~&>
*>>>~&
$**>.&>*>.&


%D*.>.>.>.>.<!>!.?>|o<<<.>.>.>.&%
%D?>D@<*$+p$>>>@!$?>|o!?|o$&*>>>?>|q&p%


%B**>|z&>*>|z&@<T%
